{"version":3,"sources":["../node_modules/comlinkjs/comlink.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../src/workers/libs/tfjs-yollo-tyny/src/postprocess.js","../src/workers/libs/tfjs-yollo-tyny/src/coco_classes.js","../src/workers/libs/tfjs-yollo-tyny/src/index.js","../src/workers/WorkerFunc.js"],"names":["TRANSFERABLE_TYPES","ArrayBuffer","MessagePort","uid","Math","floor","random","Number","MAX_SAFE_INTEGER","proxyValueSymbol","Symbol","throwSymbol","proxyTransferHandler","canHandle","obj","serialize","port1","port2","MessageChannel","expose","deserialize","proxy","throwTransferHandler","toString","stack","Error","transferHandlers","Map","pingPongMessageCounter","endpoint","target","isWindow","windowEndpoint","isEndpoint","cbProxy","activateEndpoint","args","unwrapValue","irequest","type","argumentsList","map","wrapValue","pingPongMessage","Object","assign","transferableProperties","data","value","proxyValue","rootObj","attachMessageHandler","event","id","callPath","that","slice","reduce","propName","iresult","apply","e","property","makeInvocationResult","postMessage","arg","key","transferHandler","wrappedChildren","item","iterateAllProperties","push","path","wrappedValue","wrappedChild","length","has","get","isRawWrappedValue","wrappedChildValue","join","newValue","replaceValueInObjectAtPath","newVal","lastKey","w","self","constructor","name","addEventListener","bind","removeEventListener","msg","transfer","isMessagePort","start","f","detachMessageHandler","every","prop","transferables","Promise","resolve","handler","cb","Proxy","construct","_target","_thisArg","then","r","concat","set","_proxy","isTransferable","thing","some","visited","WeakSet","add","isView","keys","YOLO_ANCHORS","tf","tensor2d","yolo_filter_boxes","boxes","box_confidence","box_class_probs","threshold","box_scores","mul","box_classes","argMax","box_class_scores","max","prediction_mask","greaterEqual","scalar","as1D","N","size","all_indices","linspace","toInt","neg_indices","zeros","indices","where","gather","reshape","flatten","yolo_boxes_to_corners","box_xy","box_wh","two","tensor1d","box_mins","sub","div","box_maxes","shape","yolo_head","feats","anchors","num_classes","num_anchors","anchors_tensor","conv_dims","conv_dims_0","conv_dims_1","conv_height_index","range","conv_width_index","tile","expandDims","transpose","conv_index","cast","dtype","sigmoid","exp","softmax","box_intersection","a","b","min","h","box_union","i","box_iou","yolo","DEFAULT_INPUT_DIM","DEFAULT_MAX_BOXES","DEFAULT_FILTER_BOXES_THRESHOLD","DEFAULT_IOU_THRESHOLD","DEFAULT_CLASS_PROB_THRESHOLD","DEFAULT_MODEL_LOCATION","downloadModel","url","loadModel","input","model","outs","classProbThreshold","iouThreshold","filterBoxesThreshold","yoloAnchors","maxBoxes","width","widthPx","height","heightPx","numClasses","classNames","class_names","tidy","activation","predict","all_boxes","scores","classes","image_dims","image","nonMaxSuppressionAsync","classes_indx_arr","keep_scores","results","boxes_arr","dispose","forEach","class_indx","classProb","className","top","left","bottom","right","resultObj","WorkerFunc","Comlink"],"mappings":"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","file":"WorkerFunc.5035a9db.map","sourceRoot":"../public","sourcesContent":["/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst TRANSFERABLE_TYPES = [ArrayBuffer, MessagePort];\nconst uid = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\nconst proxyValueSymbol = Symbol(\"proxyValue\");\nconst throwSymbol = Symbol(\"throw\");\nconst proxyTransferHandler = {\n    canHandle: (obj) => obj && obj[proxyValueSymbol],\n    serialize: (obj) => {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return port2;\n    },\n    deserialize: (obj) => {\n        return proxy(obj);\n    }\n};\nconst throwTransferHandler = {\n    canHandle: (obj) => obj && obj[throwSymbol],\n    serialize: (obj) => obj.toString() + \"\\n\" + obj.stack,\n    deserialize: (obj) => {\n        throw Error(obj);\n    }\n};\nexport const transferHandlers = new Map([\n    [\"PROXY\", proxyTransferHandler],\n    [\"THROW\", throwTransferHandler]\n]);\nlet pingPongMessageCounter = 0;\nexport function proxy(endpoint, target) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    return cbProxy(async (irequest) => {\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(wrapValue);\n        const response = await pingPongMessage(endpoint, Object.assign({}, irequest, { argumentsList: args }), transferableProperties(args));\n        const result = response.data;\n        return unwrapValue(result.value);\n    }, [], target);\n}\nexport function proxyValue(obj) {\n    obj[proxyValueSymbol] = true;\n    return obj;\n}\nexport function expose(rootObj, endpoint) {\n    if (isWindow(endpoint))\n        endpoint = windowEndpoint(endpoint);\n    if (!isEndpoint(endpoint))\n        throw Error(\"endpoint does not have all of addEventListener, removeEventListener and postMessage defined\");\n    activateEndpoint(endpoint);\n    attachMessageHandler(endpoint, async function (event) {\n        if (!event.data.id || !event.data.callPath)\n            return;\n        const irequest = event.data;\n        let that = await irequest.callPath\n            .slice(0, -1)\n            .reduce((obj, propName) => obj[propName], rootObj);\n        let obj = await irequest.callPath.reduce((obj, propName) => obj[propName], rootObj);\n        let iresult = obj;\n        let args = [];\n        if (irequest.type === \"APPLY\" || irequest.type === \"CONSTRUCT\")\n            args = irequest.argumentsList.map(unwrapValue);\n        if (irequest.type === \"APPLY\") {\n            try {\n                iresult = await obj.apply(that, args);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"CONSTRUCT\") {\n            try {\n                iresult = new obj(...args); // eslint-disable-line new-cap\n                iresult = proxyValue(iresult);\n            }\n            catch (e) {\n                iresult = e;\n                iresult[throwSymbol] = true;\n            }\n        }\n        if (irequest.type === \"SET\") {\n            obj[irequest.property] = irequest.value;\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            iresult = true;\n        }\n        iresult = makeInvocationResult(iresult);\n        iresult.id = irequest.id;\n        return endpoint.postMessage(iresult, transferableProperties([iresult]));\n    });\n}\nfunction wrapValue(arg) {\n    // Is arg itself handled by a TransferHandler?\n    for (const [key, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(arg)) {\n            return {\n                type: key,\n                value: transferHandler.serialize(arg)\n            };\n        }\n    }\n    // If not, traverse the entire object and find handled values.\n    let wrappedChildren = [];\n    for (const item of iterateAllProperties(arg)) {\n        for (const [key, transferHandler] of transferHandlers) {\n            if (transferHandler.canHandle(item.value)) {\n                wrappedChildren.push({\n                    path: item.path,\n                    wrappedValue: {\n                        type: key,\n                        value: transferHandler.serialize(item.value)\n                    }\n                });\n            }\n        }\n    }\n    for (const wrappedChild of wrappedChildren) {\n        const container = wrappedChild.path\n            .slice(0, -1)\n            .reduce((obj, key) => obj[key], arg);\n        container[wrappedChild.path[wrappedChild.path.length - 1]] = null;\n    }\n    return {\n        type: \"RAW\",\n        value: arg,\n        wrappedChildren\n    };\n}\nfunction unwrapValue(arg) {\n    if (transferHandlers.has(arg.type)) {\n        const transferHandler = transferHandlers.get(arg.type);\n        return transferHandler.deserialize(arg.value);\n    }\n    else if (isRawWrappedValue(arg)) {\n        for (const wrappedChildValue of arg.wrappedChildren || []) {\n            if (!transferHandlers.has(wrappedChildValue.wrappedValue.type))\n                throw Error(`Unknown value type \"${arg.type}\" at ${wrappedChildValue.path.join(\".\")}`);\n            const transferHandler = transferHandlers.get(wrappedChildValue.wrappedValue.type);\n            const newValue = transferHandler.deserialize(wrappedChildValue.wrappedValue.value);\n            replaceValueInObjectAtPath(arg.value, wrappedChildValue.path, newValue);\n        }\n        return arg.value;\n    }\n    else {\n        throw Error(`Unknown value type \"${arg.type}\"`);\n    }\n}\nfunction replaceValueInObjectAtPath(obj, path, newVal) {\n    const lastKey = path.slice(-1)[0];\n    const lastObj = path\n        .slice(0, -1)\n        .reduce((obj, key) => obj[key], obj);\n    lastObj[lastKey] = newVal;\n}\nfunction isRawWrappedValue(arg) {\n    return arg.type === \"RAW\";\n}\nfunction windowEndpoint(w) {\n    if (self.constructor.name !== \"Window\")\n        throw Error(\"self is not a window\");\n    return {\n        addEventListener: self.addEventListener.bind(self),\n        removeEventListener: self.removeEventListener.bind(self),\n        postMessage: (msg, transfer) => w.postMessage(msg, \"*\", transfer)\n    };\n}\nfunction isEndpoint(endpoint) {\n    return (\"addEventListener\" in endpoint &&\n        \"removeEventListener\" in endpoint &&\n        \"postMessage\" in endpoint);\n}\nfunction activateEndpoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.start();\n}\nfunction attachMessageHandler(endpoint, f) {\n    // Checking all possible types of `endpoint` manually satisfies TypeScript’s\n    // type checker. Not sure why the inference is failing here. Since it’s\n    // unnecessary code I’m going to resort to `any` for now.\n    // if(isWorker(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isMessagePort(endpoint))\n    //   endpoint.addEventListener('message', f);\n    // if(isOtherWindow(endpoint))\n    //   endpoint.addEventListener('message', f);\n    endpoint.addEventListener(\"message\", f);\n}\nfunction detachMessageHandler(endpoint, f) {\n    // Same as above.\n    endpoint.removeEventListener(\"message\", f);\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction isWindow(endpoint) {\n    // TODO: This doesn’t work on cross-origin iframes.\n    // return endpoint.constructor.name === 'Window';\n    return [\"window\", \"length\", \"location\", \"parent\", \"opener\"].every(prop => prop in endpoint);\n}\n/**\n * `pingPongMessage` sends a `postMessage` and waits for a reply. Replies are\n * identified by a unique id that is attached to the payload.\n */\nfunction pingPongMessage(endpoint, msg, transferables) {\n    const id = `${uid}-${pingPongMessageCounter++}`;\n    return new Promise(resolve => {\n        attachMessageHandler(endpoint, function handler(event) {\n            if (event.data.id !== id)\n                return;\n            detachMessageHandler(endpoint, handler);\n            resolve(event);\n        });\n        // Copy msg and add `id` property\n        msg = Object.assign({}, msg, { id });\n        endpoint.postMessage(msg, transferables);\n    });\n}\nfunction cbProxy(cb, callPath = [], target = function () { }) {\n    return new Proxy(target, {\n        construct(_target, argumentsList, proxy) {\n            return cb({\n                type: \"CONSTRUCT\",\n                callPath,\n                argumentsList\n            });\n        },\n        apply(_target, _thisArg, argumentsList) {\n            // We use `bind` as an indicator to have a remote function bound locally.\n            // The actual target for `bind()` is currently ignored.\n            if (callPath[callPath.length - 1] === \"bind\")\n                return cbProxy(cb, callPath.slice(0, -1));\n            return cb({\n                type: \"APPLY\",\n                callPath,\n                argumentsList\n            });\n        },\n        get(_target, property, proxy) {\n            if (property === \"then\" && callPath.length === 0) {\n                return { then: () => proxy };\n            }\n            else if (property === \"then\") {\n                const r = cb({\n                    type: \"GET\",\n                    callPath\n                });\n                return Promise.resolve(r).then.bind(r);\n            }\n            else {\n                return cbProxy(cb, callPath.concat(property), _target[property]);\n            }\n        },\n        set(_target, property, value, _proxy) {\n            return cb({\n                type: \"SET\",\n                callPath,\n                property,\n                value\n            });\n        }\n    });\n}\nfunction isTransferable(thing) {\n    return TRANSFERABLE_TYPES.some(type => thing instanceof type);\n}\nfunction* iterateAllProperties(value, path = [], visited = null) {\n    if (!value)\n        return;\n    if (!visited)\n        visited = new WeakSet();\n    if (visited.has(value))\n        return;\n    if (typeof value === \"string\")\n        return;\n    if (typeof value === \"object\")\n        visited.add(value);\n    if (ArrayBuffer.isView(value))\n        return;\n    yield { value, path };\n    const keys = Object.keys(value);\n    for (const key of keys)\n        yield* iterateAllProperties(value[key], [...path, key], visited);\n}\nfunction transferableProperties(obj) {\n    const r = [];\n    for (const prop of iterateAllProperties(obj)) {\n        if (isTransferable(prop.value))\n            r.push(prop.value);\n    }\n    return r;\n}\nfunction makeInvocationResult(obj) {\n    for (const [type, transferHandler] of transferHandlers) {\n        if (transferHandler.canHandle(obj)) {\n            const value = transferHandler.serialize(obj);\n            return {\n                value: { type, value }\n            };\n        }\n    }\n    return {\n        value: {\n            type: \"RAW\",\n            value: obj\n        }\n    };\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","// Heavily derived from YAD2K (https://github.com/allanzelener/YAD2K)\nimport * as tf from '@tensorflow/tfjs';\n\nexport const YOLO_ANCHORS = tf.tensor2d([\n  [0.57273, 0.677385], [1.87446, 2.06253], [3.33843, 5.47434],\n  [7.88282, 3.52778], [9.77052, 9.16828],\n]);\n\nexport function yolo_filter_boxes(\n  boxes,\n  box_confidence,\n  box_class_probs,\n  threshold\n) {\n  const box_scores = tf.mul(box_confidence, box_class_probs);\n  const box_classes = tf.argMax(box_scores, -1);\n  const box_class_scores = tf.max(box_scores, -1);\n\n  // Many thanks to @jacobgil\n  // Source: https://github.com/ModelDepot/tfjs-yolo-tiny/issues/6#issuecomment-387614801\n  const prediction_mask = tf.greaterEqual(box_class_scores, tf.scalar(threshold)).as1D();\n\n  const N = prediction_mask.size\n  // linspace start/stop is inclusive.\n  const all_indices = tf.linspace(0, N - 1, N).toInt();\n  const neg_indices = tf.zeros([N], 'int32');\n  const indices = tf.where(prediction_mask, all_indices, neg_indices);\n\n  return [\n    tf.gather(boxes.reshape([N, 4]), indices),\n    tf.gather(box_class_scores.flatten(), indices),\n    tf.gather(box_classes.flatten(), indices),\n  ];\n}\n\n/**\n * Given XY and WH tensor outputs of yolo_head, returns corner coordinates.\n * @param {tf.Tensor} box_xy Bounding box center XY coordinate Tensor\n * @param {tf.Tensor} box_wh Bounding box WH Tensor\n * @returns {tf.Tensor} Bounding box corner Tensor\n */\nexport function yolo_boxes_to_corners(box_xy, box_wh) {\n  const two = tf.tensor1d([2.0]);\n  const box_mins = tf.sub(box_xy, tf.div(box_wh, two));\n  const box_maxes = tf.add(box_xy, tf.div(box_wh, two));\n\n  const dim_0 = box_mins.shape[0];\n  const dim_1 = box_mins.shape[1];\n  const dim_2 = box_mins.shape[2];\n  const size = [dim_0, dim_1, dim_2, 1];\n\n  return tf.concat([\n    box_mins.slice([0, 0, 0, 1], size),\n    box_mins.slice([0, 0, 0, 0], size),\n    box_maxes.slice([0, 0, 0, 1], size),\n    box_maxes.slice([0, 0, 0, 0], size),\n  ], 3);\n}\n\n// Convert yolo output to bounding box + prob tensors\nexport function yolo_head(feats, anchors, num_classes) {\n  const num_anchors = anchors.shape[0];\n\n  const anchors_tensor = tf.reshape(anchors, [1, 1, num_anchors, 2]);\n\n  let conv_dims = feats.shape.slice(1, 3);\n\n  // For later use\n  const conv_dims_0 = conv_dims[0];\n  const conv_dims_1 = conv_dims[1];\n\n  let conv_height_index = tf.range(0, conv_dims[0]);\n  let conv_width_index = tf.range(0, conv_dims[1]);\n  conv_height_index = tf.tile(conv_height_index, [conv_dims[1]])\n\n  conv_width_index = tf.tile(tf.expandDims(conv_width_index, 0), [conv_dims[0], 1]);\n  conv_width_index = tf.transpose(conv_width_index).flatten();\n\n  let conv_index = tf.transpose(tf.stack([conv_height_index, conv_width_index]));\n  conv_index = tf.reshape(conv_index, [conv_dims[0], conv_dims[1], 1, 2])\n  conv_index = tf.cast(conv_index, feats.dtype);\n\n  feats = tf.reshape(feats, [conv_dims[0], conv_dims[1], num_anchors, num_classes + 5]);\n  conv_dims = tf.cast(tf.reshape(tf.tensor1d(conv_dims), [1,1,1,2]), feats.dtype);\n\n  let box_xy = tf.sigmoid(feats.slice([0,0,0,0], [conv_dims_0, conv_dims_1, num_anchors, 2]))\n  let box_wh = tf.exp(feats.slice([0,0,0, 2], [conv_dims_0, conv_dims_1, num_anchors, 2]))\n  const box_confidence = tf.sigmoid(feats.slice([0,0,0, 4], [conv_dims_0, conv_dims_1, num_anchors, 1]))\n  const box_class_probs = tf.softmax(feats.slice([0,0,0, 5],[conv_dims_0, conv_dims_1, num_anchors, num_classes]));\n\n  box_xy = tf.div(tf.add(box_xy, conv_index), conv_dims);\n  box_wh = tf.div(tf.mul(box_wh, anchors_tensor), conv_dims);\n\n  return [ box_xy, box_wh, box_confidence, box_class_probs ];\n}\n\nexport function box_intersection(a, b) {\n  const w = Math.min(a[3], b[3]) - Math.max(a[1], b[1]);\n  const h = Math.min(a[2], b[2]) - Math.max(a[0], b[0]);\n  if (w < 0 || h < 0) {\n    return 0;\n  }\n  return w * h;\n}\n\nexport function box_union(a, b) {\n  const i = box_intersection(a, b);\n  return (a[3] - a[1]) * (a[2] - a[0]) + (b[3] - b[1]) * (b[2] - b[0]) - i;\n}\n\nexport function box_iou(a, b) {\n  return box_intersection(a, b) / box_union(a, b);\n}\n","export default [\n  'person',\n  'bicycle',\n  'car',\n  'motorbike',\n  'aeroplane',\n  'bus',\n  'train',\n  'truck',\n  'boat',\n  'traffic light',\n  'fire hydrant',\n  'stop sign',\n  'parking meter',\n  'bench',\n  'bird',\n  'cat',\n  'dog',\n  'horse',\n  'sheep',\n  'cow',\n  'elephant',\n  'bear',\n  'zebra',\n  'giraffe',\n  'backpack',\n  'umbrella',\n  'handbag',\n  'tie',\n  'suitcase',\n  'frisbee',\n  'skis',\n  'snowboard',\n  'sports ball',\n  'kite',\n  'baseball bat',\n  'baseball glove',\n  'skateboard',\n  'surfboard',\n  'tennis racket',\n  'bottle',\n  'wine glass',\n  'cup',\n  'fork',\n  'knife',\n  'spoon',\n  'bowl',\n  'banana',\n  'apple',\n  'sandwich',\n  'orange',\n  'broccoli',\n  'carrot',\n  'hot dog',\n  'pizza',\n  'donut',\n  'cake',\n  'chair',\n  'sofa',\n  'pottedplant',\n  'bed',\n  'diningtable',\n  'toilet',\n  'tvmonitor',\n  'laptop',\n  'mouse',\n  'remote',\n  'keyboard',\n  'cell phone',\n  'microwave',\n  'oven',\n  'toaster',\n  'sink',\n  'refrigerator',\n  'book',\n  'clock',\n  'vase',\n  'scissors',\n  'teddy bear',\n  'hair drier',\n  'toothbrush',\n];\n","import * as tf from '@tensorflow/tfjs';\n\nimport { yolo_boxes_to_corners, yolo_head, yolo_filter_boxes, YOLO_ANCHORS } from './postprocess';\nimport class_names from './coco_classes';\n\nconst DEFAULT_INPUT_DIM = 416;\n\nconst DEFAULT_MAX_BOXES = 2048; // TODO: There is a limit to tiny-yolo, need to check the model.\nconst DEFAULT_FILTER_BOXES_THRESHOLD = 0.01;\nconst DEFAULT_IOU_THRESHOLD = 0.4;\nconst DEFAULT_CLASS_PROB_THRESHOLD = 0.4;\nconst DEFAULT_MODEL_LOCATION = '../model/model.json';\n\n/**\n * Downloads a tf.Model, defaults to a MSCOCO trained Tiny YOLO model\n * @param {String} url Tiny YOLO Model URL\n */\nexport async function downloadModel(url = DEFAULT_MODEL_LOCATION) {\n  return await tf.loadModel(url);\n}\n\n/**\n * Given an input image and model, outputs bounding boxes of detected\n * objects with class labels and class probabilities.\n * @param {tf.Tensor} input Expected shape (1, 416, 416, 3)\n * Tensor representing input image (RGB 416x416)\n * @param {tf.Model} model Tiny YOLO model to use\n * @param {Object} [options] Override options for customized\n * models or performance\n * @param {Number} [options.classProbThreshold=0.4] Filter out classes\n * below a certain threshold\n * @param {Number} [options.iouThreshold=0.4] Filter out boxes that\n * have an IoU greater than this threadhold (refer to tf.image.nonMaxSuppression)\n * @param {Number} [options.filterBoxesThreshold=0.01] Threshold to\n * filter out box confidence * class confidence\n * @param {Number} [options.maxBoxes=2048] Number of max boxes to\n * return, refer to tf.image.nonMaxSuppression. Note: The model\n * itself can only return so many boxes.\n * @param {tf.Tensor} [options.yoloAnchors=See src/postprocessing.js]\n * (Advanced) Yolo Anchor\n * Boxes, only needed if retraining on a new dataset\n * @param {Number} [options.width=416] (Advanced) If your model's input width is not 416, only if you're using a custom model\n * @param {Number} [options.height=416] (Advanced) If your model's input height is not 416, only if you're using a custom model\n * @param {Number} [options.numClasses=80] (Advanced) If your model has a different number of classes, only if you're using a custom model\n * @param {Array<String>} [options.classNames=See src/coco_classes.js] (Advanced) If your model has non-MSCOCO class names, only if you're using a custom model\n * @returns {Array<Object>} An array of found objects with `className`,\n * `classProb`, `bottom`, `top`, `left`, `right`. Positions are in pixel\n * values. `classProb` ranges from 0 to 1. `className` is derived from\n * `options.classNames`.\n */\nasync function yolo(\n  input,\n  model,\n  {\n    classProbThreshold = DEFAULT_CLASS_PROB_THRESHOLD,\n    iouThreshold = DEFAULT_IOU_THRESHOLD,\n    filterBoxesThreshold = DEFAULT_FILTER_BOXES_THRESHOLD,\n    yoloAnchors = YOLO_ANCHORS,\n    maxBoxes = DEFAULT_MAX_BOXES,\n    width: widthPx = DEFAULT_INPUT_DIM,\n    height: heightPx = DEFAULT_INPUT_DIM,\n    numClasses = 80,\n    classNames = class_names,\n  } = {},\n) {\n  const outs = tf.tidy(() => {\n    // Keep as one var to dispose easier\n    const activation = model.predict(input);\n\n    const [box_xy, box_wh, box_confidence, box_class_probs] = yolo_head(\n      activation,\n      yoloAnchors,\n      numClasses,\n    );\n\n    const all_boxes = yolo_boxes_to_corners(box_xy, box_wh);\n\n    let [boxes, scores, classes] = yolo_filter_boxes(\n      all_boxes,\n      box_confidence,\n      box_class_probs,\n      filterBoxesThreshold,\n    );\n\n    // If all boxes have been filtered out\n    if (boxes == null) {\n      return null;\n    }\n\n    const width = tf.scalar(widthPx);\n    const height = tf.scalar(heightPx);\n\n    const image_dims = tf.stack([height, width, height, width]).reshape([1, 4]);\n\n    boxes = tf.mul(boxes, image_dims);\n\n    return [boxes, scores, classes];\n  });\n\n  if (outs === null) {\n    return [];\n  }\n\n  const [boxes, scores, classes] = outs;\n\n  const indices = await tf.image.nonMaxSuppressionAsync(boxes, scores, maxBoxes, iouThreshold);\n\n  // Pick out data that wasn't filtered out by NMS and put them into\n  // CPU land to pass back to consumer\n  const classes_indx_arr = await classes.gather(indices).data();\n  const keep_scores = await scores.gather(indices).data();\n  const boxes_arr = await boxes.gather(indices).data();\n\n  tf.dispose(outs);\n  indices.dispose();\n\n  const results = [];\n\n  classes_indx_arr.forEach((class_indx, i) => {\n    const classProb = keep_scores[i];\n    if (classProb < classProbThreshold) {\n      return;\n    }\n\n    const className = classNames[class_indx];\n    let [top, left, bottom, right] = [\n      boxes_arr[4 * i],\n      boxes_arr[4 * i + 1],\n      boxes_arr[4 * i + 2],\n      boxes_arr[4 * i + 3],\n    ];\n\n    top = Math.max(0, top);\n    left = Math.max(0, left);\n    bottom = Math.min(heightPx, bottom);\n    right = Math.min(widthPx, right);\n\n    const resultObj = {\n      className,\n      classProb,\n      bottom,\n      top,\n      left,\n      right,\n    };\n\n    results.push(resultObj);\n  });\n\n  return results;\n}\n\nexport default yolo;\n","import * as Comlink from 'comlinkjs';\nimport yolo from './libs/tfjs-yollo-tyny/src/';\n\nasync function WorkerFunc(cb) {\n  return await cb();\n}\n\nComlink.expose(WorkerFunc, self);\n"]}